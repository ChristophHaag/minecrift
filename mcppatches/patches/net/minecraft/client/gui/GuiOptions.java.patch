--- a/net/minecraft/client/gui/GuiOptions.java
+++ b/net/minecraft/client/gui/GuiOptions.java
@@ -1,5 +1,10 @@
 package net.minecraft.client.gui;
 
+import com.mtbs3d.minecrift.gui.framework.BaseGuiSettings;
+import com.mtbs3d.minecrift.gui.framework.GuiButtonEx;
+import com.mtbs3d.minecrift.gui.GuiMinecriftSettings;
+import com.mtbs3d.minecrift.settings.VRSettings;
+import net.minecraft.client.Minecraft;
 import net.minecraft.client.audio.PositionedSoundRecord;
 import net.minecraft.client.audio.SoundCategory;
 import net.minecraft.client.audio.SoundEventAccessorComposite;
@@ -9,8 +14,13 @@
 import net.minecraft.client.resources.I18n;
 import net.minecraft.client.settings.GameSettings;
 import net.minecraft.client.stream.IStream;
+import net.minecraft.src.Reflector;
+import org.apache.commons.io.FilenameUtils;
 
-public class GuiOptions extends GuiScreen implements GuiYesNoCallback
+import java.io.File;
+import java.util.List;
+
+public class GuiOptions extends /** MINECRIFT */ BaseGuiSettings /** END MINECRIFT */ implements GuiYesNoCallback
 {
     private static final GameSettings.Options[] field_146440_f = new GameSettings.Options[] {GameSettings.Options.FOV, GameSettings.Options.DIFFICULTY};
     private final GuiScreen field_146441_g;
@@ -22,6 +32,9 @@
 
     public GuiOptions(GuiScreen p_i1046_1_, GameSettings p_i1046_2_)
     {
+		/** MINECRIFT */
+        super( p_i1046_1_, Minecraft.getMinecraft().vrSettings ); 
+		/** END MINECRIFT */
         this.field_146441_g = p_i1046_1_;
         this.game_settings_1 = p_i1046_2_;
     }
@@ -42,7 +55,17 @@
 
             if (var5.getEnumFloat())
             {
-                this.buttonList.add(new GuiOptionSlider(var5.returnEnumOrdinal(), this.width / 2 - 155 + var1 % 2 * 160, this.height / 6 - 12 + 24 * (var1 >> 1), var5));
+                /** MINECRIFT */
+                if (var5.getEnumString().equalsIgnoreCase("options.fov"))
+                {
+                    GuiOptionButton var7 = new GuiOptionButton(666, this.width / 2 - 155 + var1 % 2 * 160, this.height / 6 - 12 + 24 * (var1 >> 1), "VR Settings...");
+                    this.buttonList.add(var7);
+                }
+                else
+                {
+	               	this.buttonList.add(new GuiOptionSlider(var5.returnEnumOrdinal(), this.width / 2 - 155 + var1 % 2 * 160, this.height / 6 - 12 + 24 * (var1 >> 1), var5));
+                }
+				/** END MINECRIFT */
             }
             else
             {
@@ -60,8 +83,10 @@
             ++var1;
         }
 
-        this.buttonList.add(new GuiButton(8675309, this.width / 2 + 5, this.height / 6 + 48 - 6, 150, 20, "Super Secret Settings...")
-        {
+        /** MINECRIFT */ // Be helpful and actually display the shader name
+        this.buttonList.add(new GuiButtonEx(8675309, this.width / 2 + 5, this.height / 6 + 48 - 6, 150, 20, /*"Super Secret Settings..."*/getShaderButtonName())
+        /** END MINECRIFT */
+		{
             private static final String __OBFID = "CL_00000701";
             public void playPressSound(SoundHandler soundHandlerIn)
             {
@@ -77,7 +102,15 @@
         this.buttonList.add(new GuiButton(107, this.width / 2 + 5, this.height / 6 + 72 - 6, 150, 20, I18n.format("options.stream", new Object[0])));
         this.buttonList.add(new GuiButton(101, this.width / 2 - 155, this.height / 6 + 96 - 6, 150, 20, I18n.format("options.video", new Object[0])));
         this.buttonList.add(new GuiButton(100, this.width / 2 + 5, this.height / 6 + 96 - 6, 150, 20, I18n.format("options.controls", new Object[0])));
-        this.buttonList.add(new GuiButton(102, this.width / 2 - 155, this.height / 6 + 120 - 6, 150, 20, I18n.format("options.language", new Object[0])));
+        /** MINECRIFT SHADERS MOD **/
+        if (Reflector.shadersModExists()) {
+            this.buttonList.add(new GuiButton(102, this.width / 2 - 155, this.height / 6 + 120 - 6, 74, 20, I18n.format("options.language", new Object[0])));
+            this.buttonList.add(new GuiButton(190, this.width / 2 - 155 + 76, this.height / 6 + 120 - 6, 74, 20, "Shaders..."));
+        }
+        else {
+            this.buttonList.add(new GuiButton(102, this.width / 2 - 155, this.height / 6 + 120 - 6, 150, 20, I18n.format("options.language", new Object[0])));
+        }
+        /** END MINECRIFT SHADERS MOD **/
         this.buttonList.add(new GuiButton(103, this.width / 2 + 5, this.height / 6 + 120 - 6, 150, 20, I18n.format("options.multiplayer.title", new Object[0])));
         this.buttonList.add(new GuiButton(105, this.width / 2 - 155, this.height / 6 + 144 - 6, 150, 20, I18n.format("options.resourcepack", new Object[0])));
         this.buttonList.add(new GuiButton(104, this.width / 2 + 5, this.height / 6 + 144 - 6, 150, 20, I18n.format("options.snooper.view", new Object[0])));
@@ -88,6 +121,15 @@
     {
         if (button.enabled)
         {
+            /** MINECRIFT SHADERS MOD **/
+            if (Reflector.shadersModExists() && button.id == 190)
+            {
+                this.mc.gameSettings.saveOptions();
+                //this.mc.displayGuiScreen(new GuiShaders(this, this.game_settings_1));
+                this.mc.displayGuiScreen((GuiScreen)Reflector.newInstance(Reflector.ShadersMod_GuiShaders_Constructor, new Object[] {this, this.game_settings_1}));
+            }
+            /** END MINECRIFT SHADERS MOD **/
+
             if (button.id < 100 && button instanceof GuiOptionButton)
             {
                 this.game_settings_1.setOptionValue(((GuiOptionButton)button).returnEnumOptions(), 1);
@@ -97,6 +139,9 @@
             if (button.id == 8675309)
             {
                 this.mc.entityRenderer.activateNextShader();
+				/** MINECRIFT **/
+                this.reinit = true;
+				/** END MINECRIFT **/
             }
 
             if (button.id == 101)
@@ -161,6 +206,14 @@
                     GuiStreamUnavailable.func_152321_a(this);
                 }
             }
+
+            /** MINECRIFT */
+            if (button.id == 666)
+            {
+                this.mc.gameSettings.saveOptions();
+                this.mc.displayGuiScreen(new GuiMinecriftSettings(this, this.mc.vrSettings, this.game_settings_1));
+            }
+			/** END MINECRIFT */
         }
     }
 
@@ -173,4 +226,15 @@
         this.drawCenteredString(this.fontRendererObj, this.field_146442_a, this.width / 2, 15, 16777215);
         super.drawScreen(mouseX, mouseY, partialTicks);
     }
+
+    /** MINECRIFT ADDITIONS BELOW */
+    public String getShaderButtonName()
+    {
+        String shaderFileName = (this.mc.vrSettings.shaderIndex != VRSettings.NO_SHADER ? this.mc.entityRenderer.shaderResourceLocations[this.mc.vrSettings.shaderIndex].toString() : "None");
+        System.out.println("ShaderIndex: " + this.mc.vrSettings.shaderIndex);
+        File shaderFile = new File(shaderFileName);
+        String shaderName = FilenameUtils.removeExtension(shaderFile.getName());
+        String shaderButtonName = "Shader: " + shaderName;
+        return shaderButtonName;
+    }
 }

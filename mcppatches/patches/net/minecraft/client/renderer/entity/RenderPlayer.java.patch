--- a/net/minecraft/client/renderer/entity/RenderPlayer.java
+++ b/net/minecraft/client/renderer/entity/RenderPlayer.java
@@ -3,6 +3,7 @@
 import com.mojang.authlib.GameProfile;
 import java.util.UUID;
 import net.minecraft.block.Block;
+import net.minecraft.client.Minecraft;
 import net.minecraft.client.entity.AbstractClientPlayer;
 import net.minecraft.client.entity.EntityPlayerSP;
 import net.minecraft.client.model.ModelBiped;
@@ -22,6 +23,7 @@
 import net.minecraft.scoreboard.Score;
 import net.minecraft.scoreboard.ScoreObjective;
 import net.minecraft.scoreboard.Scoreboard;
+import net.minecraft.src.Reflector;
 import net.minecraft.util.MathHelper;
 import net.minecraft.util.ResourceLocation;
 import net.minecraft.util.StringUtils;
@@ -30,10 +32,18 @@
 public class RenderPlayer extends RendererLivingEntity
 {
     private static final ResourceLocation steveTextures = new ResourceLocation("textures/entity/steve.png");
-    private ModelBiped modelBipedMain;
-    private ModelBiped modelArmorChestplate;
-    private ModelBiped modelArmor;
-    private static final String __OBFID = "CL_00001020";
+    /** MINECRIFT FORGE **/
+    public ModelBiped modelBipedMain;
+    public ModelBiped modelArmorChestplate;
+    public ModelBiped modelArmor;
+    /** END MINECRIFT FORGE **/
+	private static final String __OBFID = "CL_00001020";
+
+    /** MINECRIFT */
+    public float vrOffset;
+    public boolean _renderHeadwear;
+    public boolean _renderHead;
+    /** END MINECRIFT */
 
     public RenderPlayer()
     {
@@ -43,6 +53,22 @@
         this.modelArmor = new ModelBiped(0.5F);
     }
 
+    /** MINECRIFT */
+    public void setVR(boolean vrMode, boolean renderHeadWear, float offset) {
+
+        vrOffset = vrMode? offset : 0.0F;
+        if (Minecraft.getMinecraft().vrSettings.allowAvatarIK) {
+            this.modelBipedMain.vrMode = vrMode;
+        }
+        else {
+            this.modelBipedMain.vrMode = false;
+        }
+        this.modelBipedMain.vrOffset = this.modelArmorChestplate.vrOffset = this.modelArmor.vrOffset = vrOffset;
+        this.modelBipedMain._renderHead = this.modelArmorChestplate._renderHead = this.modelArmor._renderHead = _renderHead = !vrMode;
+        this.modelBipedMain._renderHeadWear = this.modelArmorChestplate._renderHeadWear = this.modelArmor._renderHeadWear = _renderHeadwear = renderHeadWear;
+    }
+    /** END MINECRIFT */
+
     /**
      * Queries whether should render the specified pass or not.
      */
@@ -50,6 +76,17 @@
     {
         ItemStack var4 = p_77032_1_.inventory.armorItemInSlot(3 - p_77032_2_);
 
+		/** MINECRIFT FORGE **/
+        if (Reflector.forgeExists()) {
+            Object event = Reflector.newInstance(Reflector.ForgeRenderPlayerEvent_SetArmorModel_Constructor, new Object[]{p_77032_1_, this, 3 - p_77032_2_, p_77032_3_, var4});
+            Reflector.postForgeBusEvent(event);
+            int result = (Integer) Reflector.getFieldValue(event, Reflector.ForgeRenderPlayerEvent_SetArmorModel_result);
+            if (result != -1) {
+                return result;
+            }
+        }
+		/** END MINECRIFT FORGE **/
+
         if (var4 != null)
         {
             Item var5 = var4.getItem();
@@ -57,7 +94,16 @@
             if (var5 instanceof ItemArmor)
             {
                 ItemArmor var6 = (ItemArmor)var5;
-                this.bindTexture(RenderBiped.func_110857_a(var6, p_77032_2_));
+				/** MINECRIFT FORGE **/
+				if (Reflector.forgeExists()) {
+					//this.bindTexture(RenderBiped.getArmorResource(p_77032_1_, var4, p_77032_2_, null));
+                    ResourceLocation resLoc = (ResourceLocation)Reflector.call(Reflector.ForgeRenderBiped_getArmorResource, new Object[] { p_77032_1_, var4, p_77032_2_, null });
+                    this.bindTexture(resLoc);
+				}
+				else {
+                	this.bindTexture(RenderBiped.func_110857_a(var6, p_77032_2_));
+				}
+				/** END MINECRIFT FORGE **/
                 ModelBiped var7 = p_77032_2_ == 2 ? this.modelArmor : this.modelArmorChestplate;
                 var7.bipedHead.showModel = p_77032_2_ == 0;
                 var7.bipedHeadwear.showModel = p_77032_2_ == 0;
@@ -66,14 +112,26 @@
                 var7.bipedLeftArm.showModel = p_77032_2_ == 1;
                 var7.bipedRightLeg.showModel = p_77032_2_ == 2 || p_77032_2_ == 3;
                 var7.bipedLeftLeg.showModel = p_77032_2_ == 2 || p_77032_2_ == 3;
+				/** MINECRIFT FORGE **/
+				if (Reflector.forgeExists()) {
+					//var7 = net.minecraftforge.client.ForgeHooksClient.getArmorModel(p_77032_1_, var4, p_77032_2_, var7);
+                    var7 = (ModelBiped)Reflector.call(Reflector.ForgeHooksClient_getArmorModel, new Object[] { p_77032_1_, var4, p_77032_2_, var7 });
+				}
+				/** END MINECRIFT FORGE **/
                 this.setRenderPassModel(var7);
                 var7.swingProgress = this.mainModel.swingProgress;
                 var7.isRiding = this.mainModel.isRiding;
                 var7.isChild = this.mainModel.isChild;
 
-                if (var6.getArmorMaterial() == ItemArmor.ArmorMaterial.CLOTH)
+				/** MINECRIFT FORGE **/
+				boolean result = (var6.getArmorMaterial() == ItemArmor.ArmorMaterial.CLOTH);
+				int var8 = var6.getColor(var4);
+				if (Reflector.forgeExists()) {
+					result = (var8 != -1);
+				}
+                if (result)
                 {
-                    int var8 = var6.getColor(var4);
+				/** END MINECRIFT FORGE **/
                     float var9 = (float)(var8 >> 16 & 255) / 255.0F;
                     float var10 = (float)(var8 >> 8 & 255) / 255.0F;
                     float var11 = (float)(var8 & 255) / 255.0F;
@@ -111,7 +169,16 @@
 
             if (var5 instanceof ItemArmor)
             {
-                this.bindTexture(RenderBiped.func_110858_a((ItemArmor)var5, p_82408_2_, "overlay"));
+			    /** MINECRIFT FORGE **/
+				if (Reflector.forgeExists()) {
+                    //this.bindTexture(RenderBiped.getArmorResource(p_82408_1_, var4, p_82408_2_, "overlay"));
+                    ResourceLocation resLoc = (ResourceLocation)Reflector.call(Reflector.ForgeRenderBiped_getArmorResource, new Object[] { p_82408_1_, var4, p_82408_2_, "overlay" });
+                    this.bindTexture(resLoc);
+				}
+				else {
+                	this.bindTexture(RenderBiped.func_110858_a((ItemArmor)var5, p_82408_2_, "overlay"));
+				}
+				/** END MINECRIFT FORGE **/
                 GL11.glColor3f(1.0F, 1.0F, 1.0F);
             }
         }
@@ -125,6 +192,11 @@
      */
     public void doRender(AbstractClientPlayer p_76986_1_, double p_76986_2_, double p_76986_4_, double p_76986_6_, float p_76986_8_, float p_76986_9_)
     {
+		/** MINECRIFT FORGE **/
+        if (Reflector.forgeExists()) {
+            if (Reflector.postForgeBusEvent(Reflector.ForgeRenderPlayerEvent_Pre_Constructor, new Object[]{p_76986_1_, this, p_76986_9_})) return;
+        }
+		/** END MINECRIFT FORGE **/
         GL11.glColor3f(1.0F, 1.0F, 1.0F);
         ItemStack var10 = p_76986_1_.inventory.getCurrentItem();
         this.modelArmorChestplate.heldItemRight = this.modelArmor.heldItemRight = this.modelBipedMain.heldItemRight = var10 != null ? 1 : 0;
@@ -155,6 +227,11 @@
         this.modelArmorChestplate.aimedBow = this.modelArmor.aimedBow = this.modelBipedMain.aimedBow = false;
         this.modelArmorChestplate.isSneak = this.modelArmor.isSneak = this.modelBipedMain.isSneak = false;
         this.modelArmorChestplate.heldItemRight = this.modelArmor.heldItemRight = this.modelBipedMain.heldItemRight = 0;
+        /** MINECRIFT FORGE **/
+		if (Reflector.forgeExists()) {
+            if (Reflector.postForgeBusEvent(Reflector.ForgeRenderPlayerEvent_Post_Constructor, new Object[]{p_76986_1_, this, p_76986_9_})) return;
+        }
+		/** END MINECRIFT FORGE **/
     }
 
     /**
@@ -167,20 +244,48 @@
 
     protected void renderEquippedItems(AbstractClientPlayer p_77029_1_, float p_77029_2_)
     {
+		/** MINECRIFT FORGE **/
+        Object event = null;
+		boolean renderHelmet = _renderHead;
+        boolean Forge = Reflector.forgeExists();
+        if (Forge) {
+            event = Reflector.newInstance(Reflector.ForgeRenderPlayerEvent_Specials_Pre_Constructor, new Object[]{p_77029_1_, this, p_77029_2_});
+            if (Reflector.postForgeBusEvent(event)) return;
+            boolean eventRenderHelmet = (Boolean) Reflector.getFieldValue(event, Reflector.ForgeRenderPlayerEvent_Specials_Pre_renderHelmet);
+			if (renderHelmet == true && !eventRenderHelmet) {
+				renderHelmet = false;
+			}
+        }
+		/** END MINECRIFT FORGE **/
         GL11.glColor3f(1.0F, 1.0F, 1.0F);
         super.renderEquippedItems(p_77029_1_, p_77029_2_);
         super.renderArrowsStuckInEntity(p_77029_1_, p_77029_2_);
         ItemStack var3 = p_77029_1_.inventory.armorItemInSlot(3);
 
-        if (var3 != null)
+		/** MINECRIFT */
+        if (var3 != null && _renderHead && renderHelmet) 
+		/** END MINECRIFT */
         {
             GL11.glPushMatrix();
+            /** MINECRIFT */
+            GL11.glTranslatef(0, 0, vrOffset);
+            /** END MINECRIFT */
             this.modelBipedMain.bipedHead.postRender(0.0625F);
             float var4;
 
             if (var3.getItem() instanceof ItemBlock)
             {
-                if (RenderBlocks.renderItemIn3d(Block.getBlockFromItem(var3.getItem()).getRenderType()))
+				/** MINECRIFT FORGE **/
+				boolean result = RenderBlocks.renderItemIn3d(Block.getBlockFromItem(var3.getItem()).getRenderType());
+				if (Forge) {
+                    Object itemRenderTypeEquipped = Reflector.getFieldValue(Reflector.ItemRenderType_EQUIPPED);
+                    Object itemRenderHelperType3D = Reflector.getFieldValue(Reflector.ForgeItemRendererHelper_BLOCK_3D);
+                    Object customRenderer = Reflector.call(Reflector.MinecraftForgeClient_getItemRenderer, new Object[] {var3, itemRenderTypeEquipped});
+                    boolean is3D = (customRenderer != null && Reflector.callBoolean(customRenderer, Reflector.ForgeIItemRenderer_shouldUseRenderHelper, new Object[] {itemRenderTypeEquipped, var3, itemRenderHelperType3D}));
+					result = (is3D || RenderBlocks.renderItemIn3d(Block.getBlockFromItem(var3.getItem()).getRenderType()));
+				}
+                if (result)
+				/** END MINECRIFT FORGE **/
                 {
                     var4 = 0.625F;
                     GL11.glTranslatef(0.0F, -0.25F, 0.0F);
@@ -241,6 +346,12 @@
         }
 
         boolean var21 = p_77029_1_.hasCape();
+		/** MINECRIFT FORGE **/
+		if (Forge) {
+            boolean renderCape = (Boolean) Reflector.getFieldValue(event, Reflector.ForgeRenderPlayerEvent_Specials_Pre_renderCape);
+        	var21 = renderCape && var21;
+		}
+		/** END MINECRIFT FORGE **/
         float var11;
 
         if (var21 && !p_77029_1_.isInvisible() && !p_77029_1_.getHideCape())
@@ -291,10 +402,18 @@
         }
 
         ItemStack var24 = p_77029_1_.inventory.getCurrentItem();
-
-        if (var24 != null)
+		/** MINECRIFT FORGE **/
+		boolean eventRenderItem = true;
+		if (Forge)
+			eventRenderItem = (Boolean) Reflector.getFieldValue(event, Reflector.ForgeRenderPlayerEvent_Specials_Pre_renderItem);
+			
+        if (var24 != null && eventRenderItem)
+		/** END MINECRIFT FORGE **/
         {
             GL11.glPushMatrix();
+            /** MINECRIFT */
+            GL11.glTranslatef(0, 0, vrOffset);
+            /** END MINECRIFT */
             this.modelBipedMain.bipedRightArm.postRender(0.0625F);
             GL11.glTranslatef(-0.0625F, 0.4375F, 0.0625F);
 
@@ -310,8 +429,18 @@
                 var26 = var24.getItemUseAction();
             }
 
-            if (var24.getItem() instanceof ItemBlock && RenderBlocks.renderItemIn3d(Block.getBlockFromItem(var24.getItem()).getRenderType()))
-            {
+			/** MINECRIFT FORGE **/
+			boolean result = var24.getItem() instanceof ItemBlock && RenderBlocks.renderItemIn3d(Block.getBlockFromItem(var24.getItem()).getRenderType());
+            if (Forge) {
+                Object itemRenderTypeEquipped = Reflector.getFieldValue(Reflector.ItemRenderType_EQUIPPED);
+                Object itemRenderHelperType3D = Reflector.getFieldValue(Reflector.ForgeItemRendererHelper_BLOCK_3D);
+                Object customRenderer = Reflector.call(Reflector.MinecraftForgeClient_getItemRenderer, new Object[] {var24, itemRenderTypeEquipped});
+                boolean is3D = (customRenderer != null && Reflector.callBoolean(customRenderer, Reflector.ForgeIItemRenderer_shouldUseRenderHelper, new Object[] {itemRenderTypeEquipped, var24, itemRenderHelperType3D}));
+				result = (is3D || var24.getItem() instanceof ItemBlock && RenderBlocks.renderItemIn3d(Block.getBlockFromItem(var24.getItem()).getRenderType()));
+            }
+            if (result)
+            /** END MINECRIFT FORGE **/
+			{
                 var7 = 0.5F;
                 GL11.glTranslatef(0.0F, 0.1875F, -0.3125F);
                 var7 *= 0.75F;
@@ -367,7 +496,13 @@
 
             if (var24.getItem().requiresMultipleRenderPasses())
             {
-                for (var28 = 0; var28 <= 1; ++var28)
+                /** MINECRIFT FORGE **/
+				int numOfRenderPasses = 2;
+				if (Forge) {
+				    numOfRenderPasses = Reflector.callInt(var24.getItem(), Reflector.MinecraftItem_Forge_getRenderPasses, new Object[] {var24.getMetadata()});
+				}
+                /** END MINECRIFT FORGE **/
+                for (var28 = 0; var28 < numOfRenderPasses; ++var28)
                 {
                     int var8 = var24.getItem().getColorFromItemStack(var24, var28);
                     var30 = (float)(var8 >> 16 & 255) / 255.0F;
@@ -389,6 +524,11 @@
 
             GL11.glPopMatrix();
         }
+		/** MINECRIFT FORGE **/
+        if (Forge) {
+            Reflector.postForgeBusEvent(Reflector.ForgeRenderPlayerEvent_Specials_Post_Constructor, new Object[]{p_77029_1_, this, p_77029_2_});
+        }
+		/** END MINECRIFT FORGE **/
     }
 
     /**

--- a/net/minecraft/network/NetHandlerPlayServer.java
+++ b/net/minecraft/network/NetHandlerPlayServer.java
@@ -58,14 +58,7 @@
 import net.minecraft.network.play.client.C15PacketClientSettings;
 import net.minecraft.network.play.client.C16PacketClientStatus;
 import net.minecraft.network.play.client.C17PacketCustomPayload;
-import net.minecraft.network.play.server.S00PacketKeepAlive;
-import net.minecraft.network.play.server.S02PacketChat;
-import net.minecraft.network.play.server.S08PacketPlayerPosLook;
-import net.minecraft.network.play.server.S23PacketBlockChange;
-import net.minecraft.network.play.server.S2FPacketSetSlot;
-import net.minecraft.network.play.server.S32PacketConfirmTransaction;
-import net.minecraft.network.play.server.S3APacketTabComplete;
-import net.minecraft.network.play.server.S40PacketDisconnect;
+import net.minecraft.network.play.server.*;
 import net.minecraft.server.MinecraftServer;
 import net.minecraft.server.management.UserListBansEntry;
 import net.minecraft.stats.AchievementList;
@@ -287,15 +280,17 @@
                 if (packetIn.func_149466_j())
                 {
                     var5 = packetIn.getPositionX();
-                    var7 = packetIn.getPositionY();
+                    var7 = packetIn.getStance();
                     var9 = packetIn.getPositionZ();
                     var13 = packetIn.getStance() - packetIn.getPositionY();
 
                     if (!this.playerEntity.isPlayerSleeping() && (var13 > 1.65D || var13 < 0.1D))
                     {
-                        this.kickPlayerFromServer("Illegal stance");
-                        logger.warn(this.playerEntity.getCommandSenderName() + " had an illegal stance: " + var13);
-                        return;
+                        // VIVE START - don't check for stance changes
+                        //this.kickPlayerFromServer("Illegal stance");
+                        //logger.warn(this.playerEntity.getCommandSenderName() + " had an illegal stance: " + var13);
+                        //return;
+                        // VIVE END - don't check for stance changes
                     }
 
                     if (Math.abs(packetIn.getPositionX()) > 3.2E7D || Math.abs(packetIn.getPositionZ()) > 3.2E7D)
@@ -345,6 +340,7 @@
 
                 this.playerEntity.moveEntity(var13, var15, var17);
                 this.playerEntity.onGround = packetIn.func_149465_i();
+                
                 this.playerEntity.addMovementStat(var13, var15, var17);
                 double var29 = var15;
                 var13 = var5 - this.playerEntity.posX;
@@ -362,7 +358,9 @@
                 if (var25 > 0.0625D && !this.playerEntity.isPlayerSleeping() && !this.playerEntity.theItemInWorldManager.isCreative())
                 {
                     var31 = true;
-                    logger.warn(this.playerEntity.getCommandSenderName() + " moved wrongly!");
+                    // VIVE START - remove movement warning
+                    //logger.warn(this.playerEntity.getCommandSenderName() + " moved wrongly!");
+                    // VIVE END - remove movement warning
                 }
 
                 this.playerEntity.setPositionAndRotation(var5, var7, var9, var11, var12);
@@ -370,7 +368,9 @@
 
                 if (var28 && (var31 || !var32) && !this.playerEntity.isPlayerSleeping())
                 {
-                    this.setPlayerLocation(this.lastPosX, this.lastPosY, this.lastPosZ, var11, var12);
+                    // VIVE START - prevent moving
+                    //this.setPlayerLocation(this.lastPosX, this.lastPosY, this.lastPosZ, var11, var12);
+                    // VIVE END - prevent moving
                     return;
                 }
 
@@ -1171,20 +1171,20 @@
             {
                 var3 = var2.readItemStackFromBuffer();
 
-                if (var3 != null)
+                if (var3 == null)
                 {
-                    if (!ItemEditableBook.validBookTagContents(var3.getTagCompound()))
-                    {
-                        throw new IOException("Invalid book tag!");
-                    }
+                    return;
+                }
 
-                    var4 = this.playerEntity.inventory.getCurrentItem();
+                if (!ItemEditableBook.validBookTagContents(var3.getTagCompound()))
+                {
+                    throw new IOException("Invalid book tag!");
+                }
 
-                    if (var4 == null)
-                    {
-                        return;
-                    }
+                var4 = this.playerEntity.inventory.getCurrentItem();
 
+                if (var4 != null)
+                {
                     if (var3.getItem() == Items.written_book && var4.getItem() == Items.writable_book)
                     {
                         var4.setTagInfo("author", new NBTTagString(this.playerEntity.getCommandSenderName()));
@@ -1333,6 +1333,13 @@
                     var41.updateItemName("");
                 }
             }
+            // VIVE START - client querying if server is running this mod too
+            else if ("MC|Vive".equals(packetIn.getChannel()))
+            {
+                String ok = "ok";
+                sendPacket(new S3FPacketCustomPayload("MC|ViveOK", ok.getBytes(Charsets.UTF_8)));
+            }
+            // VIVE END - client querying if server is running this mod too
         }
     }
 

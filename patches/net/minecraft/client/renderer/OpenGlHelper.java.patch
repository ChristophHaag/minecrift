--- a/net/minecraft/client/renderer/OpenGlHelper.java
+++ b/net/minecraft/client/renderer/OpenGlHelper.java
@@ -18,8 +18,12 @@
 import org.lwjgl.opengl.GL14;
 import org.lwjgl.opengl.GL20;
 import org.lwjgl.opengl.GL30;
+import org.lwjgl.opengl.GL41;
+import org.lwjgl.opengl.GL44;
 import org.lwjgl.opengl.GLContext;
 
+
+
 public class OpenGlHelper
 {
     public static boolean openGL21;
@@ -35,31 +39,31 @@
      * units.
      */
     public static int lightmapTexUnit;
-    public static boolean field_153197_d;
-    public static int field_153198_e;
-    public static int field_153199_f;
-    public static int field_153200_g;
-    public static int field_153201_h;
-    public static int field_153202_i;
-    public static int field_153203_j;
-    public static int field_153204_k;
-    public static int field_153205_l;
-    public static int field_153206_m;
-    private static int field_153212_w;
+    public static boolean isNvidia;
+    public static int field_153198_e; //glFrameBuffer do not rename cause IntegratedCircuits.
+    public static int field_153199_f; //glRenderBuffer;
+    public static int field_153200_g;//glColorAttachment0;
+    public static int field_153201_h; //glDepthAttachment
+    public static int field_153202_i; //glFramebuffercomplete
+    public static int field_153203_j; //glIncompleteAttachment
+    public static int field_153204_k; //glMissingAttachment
+    public static int field_153205_l; //glIncompleteDrawBuffer
+    public static int field_153206_m; //incompleteReadBuffer
+    private static int field_153212_w; // glTextureType do not rename cause IntegratedCircuits.
     public static boolean framebufferSupported;
-    private static boolean field_153213_x;
-    private static boolean field_153214_y;
+    private static boolean field_153213_x; //shadersEnabled
+    private static boolean field_153214_y; //arbShaders
     public static int GL_LINK_STATUS;
     public static int GL_COMPILE_STATUS;
     public static int GL_VERTEX_SHADER;
     public static int GL_FRAGMENT_SHADER;
     public static boolean anisotropicFilteringSupported;
     public static int anisotropicFilteringMax;
-    private static boolean field_153215_z;
+    private static boolean field_153215_z; //arbMulti
     private static boolean openGL14;
-    public static boolean field_153211_u;
+    public static boolean field_153211_u; //extBlend
     public static boolean shadersSupported;
-    private static String field_153196_B = "";
+    private static String field_153196_B = ""; //initstatus
     private static final String __OBFID = "CL_00001179";
     public static float lastBrightnessX = 0.0F;
     public static float lastBrightnessY = 0.0F;
@@ -70,8 +74,8 @@
     public static void initializeTextures()
     {
         Config.initDisplay();
-        ContextCapabilities var0 = GLContext.getCapabilities();
-        field_153215_z = var0.GL_ARB_multitexture && !var0.OpenGL13;
+        ContextCapabilities capabilities = GLContext.getCapabilities();
+        field_153215_z = capabilities.GL_ARB_multitexture && !capabilities.OpenGL13;
 
         if (field_153215_z)
         {
@@ -86,68 +90,50 @@
             lightmapTexUnit = 33985;
         }
 
-        field_153211_u = var0.GL_EXT_blend_func_separate && !var0.OpenGL14;
-        openGL14 = var0.OpenGL14 || var0.GL_EXT_blend_func_separate;
-        framebufferSupported = openGL14 && (var0.GL_ARB_framebuffer_object || var0.GL_EXT_framebuffer_object || var0.OpenGL30);
+        field_153211_u = capabilities.GL_EXT_blend_func_separate && !capabilities.OpenGL14;
+        openGL14 = capabilities.OpenGL14 || capabilities.GL_EXT_blend_func_separate;
+        framebufferSupported = openGL14 && (capabilities.GL_ARB_framebuffer_object || capabilities.GL_EXT_framebuffer_object || capabilities.OpenGL30);
 
         if (framebufferSupported)
         {
             field_153196_B = field_153196_B + "Using framebuffer objects because ";
-
-            if (var0.OpenGL30)
+            field_153198_e = GL30.GL_FRAMEBUFFER;
+            field_153199_f = 36161;
+            field_153200_g = 36064;
+            field_153201_h = 36096;
+            field_153202_i = 36053;
+            field_153203_j = 36054;
+            field_153204_k = 36055;
+            field_153205_l = 36059;
+            field_153206_m = 36060;
+            
+            if (capabilities.OpenGL30)
             {
                 field_153196_B = field_153196_B + "OpenGL 3.0 is supported and separate blending is supported.\n";
                 field_153212_w = 0;
-                field_153198_e = 36160;
-                field_153199_f = 36161;
-                field_153200_g = 36064;
-                field_153201_h = 36096;
-                field_153202_i = 36053;
-                field_153203_j = 36054;
-                field_153204_k = 36055;
-                field_153205_l = 36059;
-                field_153206_m = 36060;
             }
-            else if (var0.GL_ARB_framebuffer_object)
+            else if (capabilities.GL_ARB_framebuffer_object)
             {
                 field_153196_B = field_153196_B + "ARB_framebuffer_object is supported and separate blending is supported.\n";
                 field_153212_w = 1;
-                field_153198_e = 36160;
-                field_153199_f = 36161;
-                field_153200_g = 36064;
-                field_153201_h = 36096;
-                field_153202_i = 36053;
-                field_153204_k = 36055;
-                field_153203_j = 36054;
-                field_153205_l = 36059;
-                field_153206_m = 36060;
             }
-            else if (var0.GL_EXT_framebuffer_object)
+            else if (capabilities.GL_EXT_framebuffer_object)
             {
                 field_153196_B = field_153196_B + "EXT_framebuffer_object is supported.\n";
                 field_153212_w = 2;
-                field_153198_e = 36160;
-                field_153199_f = 36161;
-                field_153200_g = 36064;
-                field_153201_h = 36096;
-                field_153202_i = 36053;
-                field_153204_k = 36055;
-                field_153203_j = 36054;
-                field_153205_l = 36059;
-                field_153206_m = 36060;
             }
         }
         else
         {
             field_153196_B = field_153196_B + "Not using framebuffer objects because ";
-            field_153196_B = field_153196_B + "OpenGL 1.4 is " + (var0.OpenGL14 ? "" : "not ") + "supported, ";
-            field_153196_B = field_153196_B + "EXT_blend_func_separate is " + (var0.GL_EXT_blend_func_separate ? "" : "not ") + "supported, ";
-            field_153196_B = field_153196_B + "OpenGL 3.0 is " + (var0.OpenGL30 ? "" : "not ") + "supported, ";
-            field_153196_B = field_153196_B + "ARB_framebuffer_object is " + (var0.GL_ARB_framebuffer_object ? "" : "not ") + "supported, and ";
-            field_153196_B = field_153196_B + "EXT_framebuffer_object is " + (var0.GL_EXT_framebuffer_object ? "" : "not ") + "supported.\n";
+            field_153196_B = field_153196_B + "OpenGL 1.4 is " + (capabilities.OpenGL14 ? "" : "not ") + "supported, ";
+            field_153196_B = field_153196_B + "EXT_blend_func_separate is " + (capabilities.GL_EXT_blend_func_separate ? "" : "not ") + "supported, ";
+            field_153196_B = field_153196_B + "OpenGL 3.0 is " + (capabilities.OpenGL30 ? "" : "not ") + "supported, ";
+            field_153196_B = field_153196_B + "ARB_framebuffer_object is " + (capabilities.GL_ARB_framebuffer_object ? "" : "not ") + "supported, and ";
+            field_153196_B = field_153196_B + "EXT_framebuffer_object is " + (capabilities.GL_EXT_framebuffer_object ? "" : "not ") + "supported.\n";
         }
 
-        anisotropicFilteringSupported = var0.GL_EXT_texture_filter_anisotropic;
+        anisotropicFilteringSupported = capabilities.GL_EXT_texture_filter_anisotropic;
         anisotropicFilteringMax = (int)(anisotropicFilteringSupported ? GL11.glGetFloat(34047) : 0.0F);
         field_153196_B = field_153196_B + "Anisotropic filtering is " + (anisotropicFilteringSupported ? "" : "not ") + "supported";
 
@@ -161,13 +147,13 @@
         }
 
         GameSettings.Options.ANISOTROPIC_FILTERING.setValueMax((float)anisotropicFilteringMax);
-        openGL21 = var0.OpenGL21;
-        field_153213_x = openGL21 || var0.GL_ARB_vertex_shader && var0.GL_ARB_fragment_shader && var0.GL_ARB_shader_objects;
+        openGL21 = capabilities.OpenGL21;
+        field_153213_x = openGL21 || capabilities.GL_ARB_vertex_shader && capabilities.GL_ARB_fragment_shader && capabilities.GL_ARB_shader_objects;
         field_153196_B = field_153196_B + "Shaders are " + (field_153213_x ? "" : "not ") + "available because ";
 
         if (field_153213_x)
         {
-            if (var0.OpenGL21)
+            if (capabilities.OpenGL21)
             {
                 field_153196_B = field_153196_B + "OpenGL 2.1 is supported.\n";
                 field_153214_y = false;
@@ -188,22 +174,22 @@
         }
         else
         {
-            field_153196_B = field_153196_B + "OpenGL 2.1 is " + (var0.OpenGL21 ? "" : "not ") + "supported, ";
-            field_153196_B = field_153196_B + "ARB_shader_objects is " + (var0.GL_ARB_shader_objects ? "" : "not ") + "supported, ";
-            field_153196_B = field_153196_B + "ARB_vertex_shader is " + (var0.GL_ARB_vertex_shader ? "" : "not ") + "supported, and ";
-            field_153196_B = field_153196_B + "ARB_fragment_shader is " + (var0.GL_ARB_fragment_shader ? "" : "not ") + "supported.\n";
+            field_153196_B = field_153196_B + "OpenGL 2.1 is " + (capabilities.OpenGL21 ? "" : "not ") + "supported, ";
+            field_153196_B = field_153196_B + "ARB_shader_objects is " + (capabilities.GL_ARB_shader_objects ? "" : "not ") + "supported, ";
+            field_153196_B = field_153196_B + "ARB_vertex_shader is " + (capabilities.GL_ARB_vertex_shader ? "" : "not ") + "supported, and ";
+            field_153196_B = field_153196_B + "ARB_fragment_shader is " + (capabilities.GL_ARB_fragment_shader ? "" : "not ") + "supported.\n";
         }
 
         shadersSupported = framebufferSupported && field_153213_x;
-        field_153197_d = GL11.glGetString(GL11.GL_VENDOR).toLowerCase().contains("nvidia");
+        isNvidia = GL11.glGetString(GL11.GL_VENDOR).toLowerCase().contains("nvidia");
     }
 
-    public static boolean func_153193_b()
+    public static boolean isShadersSupported()
     {
         return shadersSupported;
     }
 
-    public static String func_153172_c()
+    public static String func_153172_c() //getinitstatus
     {
         return field_153196_B;
     }
@@ -479,6 +465,7 @@
         return field_153214_y ? ARBVertexShader.glGetAttribLocationARB(p_153164_0_, p_153164_1_) : GL20.glGetAttribLocation(p_153164_0_, p_153164_1_);
     }
 
+    //glBinDframeBuffer
     public static void func_153171_g(int p_153171_0_, int p_153171_1_)
     {
         if (framebufferSupported)
@@ -499,6 +486,7 @@
         }
     }
 
+    //glBindRenderBuffer
     public static void func_153176_h(int p_153176_0_, int p_153176_1_)
     {
         if (framebufferSupported)
@@ -519,6 +507,7 @@
         }
     }
 
+    //glDeleteRenderBuffer
     public static void func_153184_g(int p_153184_0_)
     {
         if (framebufferSupported)
@@ -539,6 +528,7 @@
         }
     }
 
+    //glDeleteFramebuffers
     public static void func_153174_h(int p_153174_0_)
     {
         if (framebufferSupported)
@@ -558,7 +548,8 @@
             }
         }
     }
-
+    
+    //glGenFramebuffer
     public static int func_153165_e()
     {
         if (!framebufferSupported)
@@ -570,7 +561,7 @@
             switch (field_153212_w)
             {
                 case 0:
-                    return GL30.glGenFramebuffers();
+                       return GL30.glGenFramebuffers();
 
                 case 1:
                     return ARBFramebufferObject.glGenFramebuffers();
@@ -584,6 +575,7 @@
         }
     }
 
+    //glGenRenderBuffer
     public static int func_153185_f()
     {
         if (!framebufferSupported)
@@ -609,6 +601,7 @@
         }
     }
 
+    //glGenRenderBufferStorage
     public static void func_153186_a(int p_153186_0_, int p_153186_1_, int p_153186_2_, int p_153186_3_)
     {
         if (framebufferSupported)
@@ -629,6 +622,7 @@
         }
     }
 
+    //glFrameBufferRenderBuffer
     public static void func_153190_b(int p_153190_0_, int p_153190_1_, int p_153190_2_, int p_153190_3_)
     {
         if (framebufferSupported)
@@ -649,6 +643,7 @@
         }
     }
 
+    //glCheckFrameBufferStatus
     public static int func_153167_i(int p_153167_0_)
     {
         if (!framebufferSupported)
@@ -674,6 +669,7 @@
         }
     }
 
+    //glFrameBufferTexture2D
     public static void func_153188_a(int p_153188_0_, int p_153188_1_, int p_153188_2_, int p_153188_3_, int p_153188_4_)
     {
         if (framebufferSupported)
@@ -764,8 +760,16 @@
         }
     }
 
+    
+    public static boolean fbo = true;
     public static boolean isFramebufferEnabled()
     {
-        return Config.isFastRender() ? false : framebufferSupported && Minecraft.getMinecraft().gameSettings.fboEnable;
+    	return fbo;
+       // return Config.isFastRender() ? false : framebufferSupported && Minecraft.getMinecraft().gameSettings.fboEnable;
     }
+
+	public static boolean func_153193_b() {
+		// TODO Auto-generated method stub
+		return isFramebufferEnabled();
+	}
 }
